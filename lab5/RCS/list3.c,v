head	1.9;
access;
symbols;
locks;
comment	@ * @;


1.9
date	2014.05.07.23.14.19;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.05.07.23.06.09;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.05.07.23.04.44;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.05.07.22.57.38;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.07.22.55.21;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.07.22.53.44;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.07.22.26.59;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.07.22.26.24;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.07.21.51.21;	author -;	state -;
branches;
next	;


desc
@@


1.9
log
@-
@
text
@// $Id: list3.c,v 1.8 2014-05-07 16:06:09-07 - - $
// Ryan Brounley -- rbrounle

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>

typedef struct node node;
struct node {
   char *word;
   node *link;
};

int main (int argc, char **argv) {
   node *head = NULL;
   for (int argi = 0; argi < argc; ++argi) {
      node *node = malloc (sizeof (struct node));
      assert (node != NULL);
      node->word = argv[argi];
      node->link = head;
      head = node;
   }
   for (node *curr = head; curr->link != NULL; curr = curr->link) {
      printf ("%p->node {word=%p->[%s], link=%p}\n",
              curr, curr->word, curr->word, curr->link);
   }
   return 9;
}
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.7 2014-05-07 16:04:44-07 - - $
d15 1
a15 1
   node head = NULL;
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.6 2014-05-07 15:57:38-07 - - $
d15 1
a15 1
   node *head = NULL;
@


1.6
log
@-
@
text
@d1 2
a2 1
// $Id: list3.c,v 1.5 2014-05-07 15:55:21-07 - - $
d15 1
a15 2
   node head = NULL;
   node *head;
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.4 2014-05-07 15:53:44-07 - - $
d14 2
a15 1
   node *head = NULL;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.3 2014-05-07 15:26:59-07 - - $
d14 1
a14 1
   node *head;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.2 2014-05-07 15:26:24-07 - - $
d15 1
a15 1
   for (int argi = 0; argi < 5; ++argi) {
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.1 2014-05-07 14:51:21-07 - - $
d9 2
a10 2
   char word;
   node link;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: list2.c,v 1.1 2014-05-07 14:34:53-07 - - $
d9 2
a10 2
   char *word;
   node *link;
@
